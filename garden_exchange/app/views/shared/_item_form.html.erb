<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=true">
</script>

<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<div id="geo"></div>

<div class="container">
  <div class="form-group">

    <%= form_for (@item) do |f| %>
      <div id='image_container' class='block text-center'>
        <%= image_tag @item.image.url(:medium), class: 'imageClip img-responsive', id:"image" %>
      </div>
      <span class="btn btn-default btn-file btn-block">Add your own image<%= f.file_field :image, id:"upload_image" %></span>
      <%= render 'shared/error_messages' %>

      <%= collection_select(:item, :category_id, Category.all, :id, :category) %>
      
      <%= f.text_area :description, :placeholder => "Tell us more about what you have - how much, ?" %>
      <%= f.text_field :location, placeholder: "Where are you at? ex. 1st and Main" %>
      <%= f.email_field :email, :placeholder => "Contact me by email (add it here)" %>
      <%= f.telephone_field :phone, :placeholder => "Contact me by text (add it here)" %>

      <%= f.submit "Save Item", class: "btn btn-default btn-block" %>
      <%= link_to 'Nevermind', root_url, class: "btn btn-default btn-block" %>
      <%= link_to 'Remove this from the Exchange', @item, class: "btn btn-danger btn-block", method: :delete %>
    <% end %>
 
  </div>
</div>

<script>
  // This handles changing the image when a user uploads a new one
  function handleFileSelect(evt) {
    var files = evt.target.files; // FileList object
      f=files[0]
      // Only process image files.
      if (f.type.match('image.*')) {
      var reader = new FileReader();

      reader.onload = (function(theFile) {
        return function(e) {
          document.getElementById("image").src=e.target.result;
        };
      })(f);

      // Read in the image file as a data URL.
      reader.readAsDataURL(f);
      }
    }
  document.getElementById('upload_image').addEventListener('change', handleFileSelect, false);

  // This handles changing the image when the user chooses a category.
  function handleCategorySelect(evt) {
    i = document.getElementById('item_category_id')
    new_category = i.options[i.selectedIndex].text;
    current_src = document.getElementById('image').src;
    new_src = '<%= ENV['S3_BUCKET_PATH'] + ENV['S3_BUCKET_NAME'] %>' + '/categories/' + new_category + '.png';
    document.getElementById("image").src=new_src
  };
  document.getElementById('item_category_id').addEventListener('change', handleCategorySelect, false);

  // hide the remove button on new

  // function hideRemoveButton() {
  //   if document.url== ? {
  //     document.getElementById('remove_button').hide
  //   }
  // }



</script>

<script>   
  map = document.getElementById('geo');

  if(navigator.geolocation) {

    geocoder = new google.maps.Geocoder();

    navigator.geolocation.getCurrentPosition(function(position) {

      var latlng = new google.maps.LatLng(
        position.coords.latitude, position.coords.longitude
      );

      geocoder.geocode({'latLng': latlng}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          if (results[0]) {
            document.getElementById('item_location').value =
              results[0].formatted_address;
          } else {
            alert('No results found');
          }
        } else {
          alert('Geocoder failed due to: ' + status);
        }
      });
      
    }, function() {
      'Error: The Geolocation service failed.';
    });
  } else {
    // Browser doesn't support Geolocation
    'Error: Your browser doesn\'t support geolocation.';
  }
</script>



